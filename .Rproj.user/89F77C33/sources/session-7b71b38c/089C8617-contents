# Feature Selection Demo for Business Students
# Topic: Identifying Important Features for Bankruptcy Prediction

# Install and load necessary packages
if(!require(caret)) install.packages("caret")
library(caret)

# Create a sample financial dataset (simulating company data)
set.seed(123)
n <- 200  # 200 companies

# Generate financial ratios (features)
financial_data <- data.frame(
  current_ratio = rnorm(n, 1.5, 0.5),          # Assets/Liabilities
  debt_to_equity = rnorm(n, 2, 1),             # Total Debt/Equity
  profit_margin = rnorm(n, 0.05, 0.15),        # Net Income/Revenue
  return_on_assets = rnorm(n, 0.08, 0.10),     # Net Income/Assets
  revenue_growth = rnorm(n, 0.10, 0.20),       # Year-over-year growth
  cash_flow_ratio = rnorm(n, 0.15, 0.12)       # Operating Cash Flow/Debt
)

# Create bankruptcy outcome (0 = healthy, 1 = bankrupt)
# Companies with poor ratios are more likely to go bankrupt
bankruptcy_prob <- 1 / (1 + exp(
  2 + 
    1.5 * financial_data$current_ratio - 
    0.8 * financial_data$debt_to_equity + 
    5 * financial_data$profit_margin
))
financial_data$bankrupt <- rbinom(n, 1, bankruptcy_prob)
financial_data$bankrupt <- factor(financial_data$bankrupt, 
                                  labels = c("Healthy", "Bankrupt"))

# View the data structure
print("Dataset structure:")
str(financial_data)
print(table(financial_data$bankrupt))

# METHOD 1: T-Test for Each Feature
cat("\n=== METHOD 1: T-Test Feature Selection ===\n")

features <- c("current_ratio", "debt_to_equity", "profit_margin", 
              "return_on_assets", "revenue_growth", "cash_flow_ratio")

t_test_results <- data.frame(
  Feature = character(),
  P_Value = numeric(),
  Significant = character()
)

for(feature in features) {
  test <- t.test(financial_data[[feature]] ~ financial_data$bankrupt)
  significant <- ifelse(test$p.value < 0.05, "YES", "NO")
  
  t_test_results <- rbind(t_test_results, data.frame(
    Feature = feature,
    P_Value = round(test$p.value, 4),
    Significant = significant
  ))
}

print(t_test_results)
cat("\nFeatures with p-value < 0.05 are considered significant predictors\n")

# METHOD 2: Correlation Analysis
cat("\n=== METHOD 2: Correlation with Outcome ===\n")

# Convert bankruptcy to numeric for correlation
bankruptcy_numeric <- as.numeric(financial_data$bankrupt) - 1

correlations <- data.frame(
  Feature = character(),
  Correlation = numeric(),
  Abs_Correlation = numeric()
)

for(feature in features) {
  cor_value <- cor(financial_data[[feature]], bankruptcy_numeric)
  correlations <- rbind(correlations, data.frame(
    Feature = feature,
    Correlation = round(cor_value, 4),
    Abs_Correlation = round(abs(cor_value), 4)
  ))
}

correlations <- correlations[order(-correlations$Abs_Correlation), ]
print(correlations)

# Visualize the most important features
cat("\n=== Creating Visualization ===\n")

# Select top 3 features based on absolute correlation
top_features <- head(correlations$Feature, 3)

par(mfrow = c(1, 3))
for(feature in top_features) {
  boxplot(financial_data[[feature]] ~ financial_data$bankrupt,
          main = paste("Bankruptcy by", gsub("_", " ", feature)),
          xlab = "Company Status",
          ylab = gsub("_", " ", feature),
          col = c("lightgreen", "pink"))
}
par(mfrow = c(1, 1))

# Summary
cat("\n=== SUMMARY ===\n")
cat("Selected features (significant by t-test):\n")
print(subset(t_test_results, Significant == "YES")$Feature)